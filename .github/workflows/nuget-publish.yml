name: Publish Qinile Core to Nuget
on:
  push:
    branches:
      - main # Default release branch

env:
  DOTNET_VERSION: '3.1.x'
  PACKAGE_MAJOR_VERSION: 0
  PACKAGE_MINOR_VERSION: 0
  PACKAGE_VERSION: $PACKAGE_MAJOR_VERSION.$PACKAGE_MINOR_VERSION.$GITHUB_RUN_NUMBER
  REPOSITORY_URL: https://api.nuget.org/v3/index.json

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build, Pack & Publish
    steps:

      # Configuration

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Dotnet ${{env.DOTNET_VERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      # Build

      - name: Dotnet Build Qinile.Core.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core/Qinile.Core.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core/Qinile.Core.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.Behaviours.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Behaviours/Qinile.Core.Behaviours.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Behaviours.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Behaviours/Qinile.Core.Behaviours.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}
      
      - name: Dotnet Build Qinile.Core.Converters.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Converters/Qinile.Core.Converters.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Converters.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Converters/Qinile.Core.Converters.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.Data.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Data/Qinile.Core.Data.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Data.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Data/Qinile.Core.Data.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.Extensions.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Extensions/Qinile.Core.Extensions.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Extensions.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Extensions/Qinile.Core.Extensions.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.Models.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Models/Qinile.Core.Models.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Models.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Models/Qinile.Core.Models.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.Services.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.Services/Qinile.Core.Services.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.Services.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.Services/Qinile.Core.Services.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      - name: Dotnet Build Qinile.Core.ViewModels.${{env.PACKAGE_VERSION}}
        run: dotnet build source/Qinile.Core.ViewModels/Qinile.Core.ViewModels.csproj --configuration Release

      - name: Dotnet Pack Qinile.Core.ViewModels.${{env.PACKAGE_VERSION}}
        run: dotnet pack source/Qinile.Core.ViewModels/Qinile.Core.ViewModels.csproj --configuration Release --include-symbols --include-source -o out -p:PackageVersion=${{env.PACKAGE_VERSION}}

      # Push
      - name: Dotnet Push Qinile.Core.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Behaviours.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Behaviours.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Converters.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Converters.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Data.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Data.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Extensions.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Extensions.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Models.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Models.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.Services.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.Services.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
        
      - name: Dotnet Push Qinile.Core.ViewModels.${{env.PACKAGE_VERSION}}
        run: dotnet nuget push out/Qinile.Core.ViewModels.*.nupkg --source ${{env.REPOSITORY_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
    